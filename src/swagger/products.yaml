paths:
  /api/products:
    get:
      tags:
        - Products
      summary: Get All Products
      description: Retrieve a list of all products with optional filters and sorting.
      parameters:
        - name: sort
          in: query
          description: Sort by brand, category, original price, discounted price, discount, quantity, average rating, or availability.
          required: false
          schema:
            type: string
            example: "-price"
        - name: brand
          in: query
          description: Filter by brand.
          required: false
          schema:
            type: string
            example: "طبیعت"
        - name: category
          in: query
          description: Filter by category.
          required: false
          schema:
            type: string
            example: "کنسرو"
        - name: price
          in: query
          description: Filter by price.
          required: false
          schema:
            type: integer
            example: 5000
        - name: discount
          in: query
          description: Filter by discount percentage.
          required: false
          schema:
            type: integer
            example: 10
        - name: discountedPrice
          in: query
          description: Filter by discounted price.
          required: false
          schema:
            type: integer
            example: 4000
        - name: numReviews
          in: query
          description: Filter by the number of reviews.
          required: false
          schema:
            type: integer
            example: 15
        - name: rating
          in: query
          description: Filter by average review rating.
          required: false
          schema:
            type: number
            format: float
            example: 4.5
        - name: isAvailable
          in: query
          description: Filter by product availability.
          required: false
          schema:
            type: boolean
            example: true
        - name: countInStock
          in: query
          description: Filter by stock quantity.
          required: false
          schema:
            type: integer
            example: 10
      responses:
        "200":
          description: Successful response with the list of products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      tags:
        - Products
      summary: Create a new product
      description: Add a new product to the inventory. Requires authentication.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "201":
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized. JWT token is missing or invalid.
        "500":
          description: Internal server error.

  /api/products/{id}:
    get:
      tags:
        - Products
      summary: Get a Product
      description: Retrieve the details of a specific product by its ID.
      parameters:
        - in: path
          name: id
          description: The unique ID of the product.
          required: true
          schema:
            type: string
            example: "67378d0546a5bb2e6dc1307e"
      responses:
        "200":
          description: Successful response with product details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found.
    patch:
      tags:
        - Products
      summary: Update a product
      description: Modify details of an existing product. Requires authentication.
      parameters:
        - in: path
          name: id
          description: The unique ID of the product.
          required: true
          schema:
            type: string
            example: "67378d0546a5bb2e6dc1307e"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "200":
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found.
        "401":
          description: Unauthorized. JWT token is missing or invalid.
    delete:
      tags:
        - Products
      summary: Delete a product
      description: Remove a product from the inventory by its ID. Requires authentication.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: The unique ID of the product to delete.
          schema:
            type: string
            example: "67378d0546a5bb2e6dc1307e"
      responses:
        "200":
          description: Product deleted successfully.
        "404":
          description: Product not found.
        "401":
          description: Unauthorized. JWT token is missing or invalid.

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the product.
          example: "67378d0546a5bb2e6dc1307e"
        name:
          type: string
          description: The name of the product.
          example: "کنسرو لوبیا با قارچ طبیعت - 380 گرم"
        description:
          type: string
          description: A detailed description of the product.
          example: "A tasty and nutritious ready-made meal."
        image:
          type: string
          description: URL of the product's main image.
          example: "https://example.com/product.jpg"
        images:
          type: array
          items:
            type: string
            format: url
          description: Additional images for the product.
        countInStock:
          type: integer
          description: Number of items available in stock.
          example: 22
        isAvailable:
          type: boolean
          description: Whether the product is currently available.
          example: true
        brand:
          type: string
          description: The product brand.
          example: "طبیعت"
        category:
          type: string
          description: Product category.
          example: "کنسرو"
        rating:
          type: number
          format: float
          description: Average customer rating.
          example: 4.5
        numReviews:
          type: integer
          description: Total number of customer reviews.
          example: 15
        price:
          type: integer
          description: Price of the product in currency units.
          example: 55000
        discountedPrice:
          type: integer
          description: discounted-price of the product in currency units.
          example: 55000
        discount:
          type: integer
          description: Discount percentage on the product.
          example: 10
    ProductInput:
      type: object
      required:
        - name
        - description
        - image
        - countInStock
        - isAvailable
        - brand
        - category
        - price
      properties:
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: A detailed description of the product.
        image:
          type: string
          description: URL of the product's main image.
        images:
          type: array
          items:
            type: string
            format: url
        countInStock:
          type: integer
        isAvailable:
          type: boolean
        brand:
          type: string
        category:
          type: string
        price:
          type: integer
        discount:
          type: integer

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
